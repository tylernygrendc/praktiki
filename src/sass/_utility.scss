
@use "sass:color";
@use "sass:map";

// TYPOGRAPHY STYLES

@font-face {
    font-family: "Open Sans";
    font-style: normal;
    font-weight: 400;
    src: url(/font/open-sans.ttf);
}

@font-face {
    font-family: 'Material Icons';
    font-style: normal;
    font-weight: 400;
    src: url(/font/material-icons.ttf);
}

@mixin text($size) {
    display: inline-block;
    font-family: "Open Sans";
    font-size: $size;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    font-optical-sizing: auto;
    text-decoration: none;
    text-transform: none;
    text-shadow: none;
    letter-spacing: 0;
    line-height: 1.5;
}

@mixin icon($size) {
    display: inline-block;
    font-family: 'Material Icons';
    font-size: $size;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    font-optical-sizing: auto;
    text-decoration: none;
    text-transform: none !important;
    text-shadow: none;
    letter-spacing: 0;
    line-height: 1;
}

.icon {
    @include icon(1em);
}

// THEME STYLES

$primary: #2d5345; $secondary: #e2b736; $default: #222;

@function contrast($color){
    @if (lightness($color) > 50) { @return #000; } 
    @else { @return #FFF; } 
}

$palette: (
    "primary-light": color.scale($primary, $lightness: 15%),
    "primary-medium": $primary,
    "primary-dark": color.scale($primary, $lightness: -50%),
    "on-primary": contrast($primary),
    "secondary-light": color.scale($secondary, $lightness: 15%),
    "secondary-medium": $secondary,
    "secondary-dark": color.scale($secondary, $lightness: -50%),
    "on-secondary": contrast($secondary),
    "default-light": color.scale($default, $lightness: 15%),
    "default-medium": $default,
    "default-dark": color.scale($default, $lightness: -50%),
    "on-default": contrast($default)
);

// SCROLL STYLES

html {
    scroll-behavior: smooth;
    background-color: $default;
    color: contrast($default);
}

::-webkit-scrollbar{
    width: 16px;
    height: 16px;

    &-track {
        background-color: map.get($palette, "default-dark");
    }

    &-thumb{
        background-color: map.get($palette, "on-default");
        border: map.get($palette, "default-dark") solid 4px;
        border-radius: 8px;
    }

    &-button{
        display: none;
    }

    &-corner {
        background-color: map.get($palette, "default-dark");
    }
}

// DEFAULT BLOCK STYLES

*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font: inherit;
}

body {
    background-color: map.get($palette, "default");
    @include text(1rem);
    color: map.get($palette, "on-default");
}

img, svg, video  {
    display: block;
    object-fit: cover;
    object-position: center;
    max-width: 100%;
    background-color: map.get($palette, "default-medium");
}

details {
    summary {
        display: flex;
        flex-direction: row;
        align-items: center;
        :last-child {
            position: relative;
            right: 0.25em;
        }
    }
    &[open]{
        summary :last-child{
            position: relative;
            right: 0.25em;
            transform: rotate(180deg);
        }
    }
}

.hidden {
    visibility: hidden;
}

// BUTTON STYLES

@mixin button($color: map.get($palette, "default-medium"),  $size: 1em){
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 0.5em;
    border: 0 solid;
    border-radius: 6px;
    background-color: $color;
    color: contrast($color);
    font-family: "Open Sans";
    font-size: $size;
    font-weight: 500;
    font-style: normal;
    font-stretch: normal;
    font-optical-sizing: auto;
    text-decoration: none;
    text-transform: none;
    text-shadow: none;
    letter-spacing: 0;
    cursor: pointer;

    * { 
        background-color: transparent; 
    }

    a{
        color: contrast($color);
        text-decoration: none !important;
    }

    :last-child{ 
        margin-left: auto; 
    }

    &:hover, &:focus-visible {
        outline: 0.1em solid map.get($palette, "secondary-medium");
    }
}

button {
    @include button();

    &.raised {
        text-shadow: 1px 1px 2px rgba(0,0,0,0.4);
        box-shadow: 1px 1px 2px rgba(0,0,0,0.4);

        &--primary{
            @extend .raised;
            background-color: map.get($palette, "primary-medium");

            &:hover, &:focus-visible {
                transition: 250ms;
                transform: scale(1.05);
                background-color: color.scale(map.get($palette, "primary-medium"), $lightness: 5%);
            }
        }

        &:hover, &:focus-visible {
            transition: 250ms;
            transform: scale(1.05);
            background-color: color.scale(map.get($palette, "default-light"), $lightness: 5%);
        }
    }

    &.icon{
        border-radius: 50%;
        padding: 1em;
    }
}

[type=button] {
    @include button();
    text-shadow: 1px 1px 2px rgba(0,0,0,0.4);
    box-shadow: 1px 1px 2px rgba(0,0,0,0.4);
    background-color: map.get($palette, "primary-medium");

    &:hover, &:focus-visible {
        transition: 250ms;
        transform: scale(1.05);
        background-color: color.scale(map.get($palette, "primary-medium"), $lightness: 5%);
    }
}

// TAB STYLES
.tabs{

    [role=tablist]{

        position: absolute;
        inset: 0 0 auto 0;
        height: 2rem;

        display: flex;
        flex-direction: row;
        align-items: stretch;
        padding: 0rem 0.25rem;
        gap: 0.25rem;

        background-color: map.get($palette, "default-medium");
        color: map.get($palette, "on-default");

        [role=tab]{

            flex-grow: 1;

            display: flex;
            flex-direction: row;
            align-items: center;
            margin-top: 0.25rem;
            padding: 0.5rem;
            border-radius: 4px 4px 0px 0px;
            box-sizing: border-box;

            font-size: 0.85rem;
            text-transform: capitalize;

            background-color: map.get($palette, "default-dark");;
            color: map.get($palette, "on-default");
            
            cursor: pointer;
            
            :last-child{
                margin-left: auto;
            }

            &[aria-selected=true]{
                background-color: map.get($palette, "default-medium");
                border: 1px solid map.get($palette, "primary-medium");
            border-bottom: 0;
            }
        }

        #assistantTab {
            margin-left: auto;
        }
    }

    [role=tabpanel] {
        
        position: absolute;
        inset: 2rem 0 0 0;
        height: auto;

        display: flex;
        flex-direction: column;
        align-items: stretch;
        padding: 1rem;
        gap: 0.25em;

        background-color: map.get($palette, "default-medium");
        color: map.get($palette, "on-default");
    }
}

// INPUT STYLES

@mixin input($size: 0.85em, $color: map.get($palette, "default-light")) {
    display: inline-block;
    border: 0 solid;
    border-radius: 6px;
    background-color: $color;
    padding: 0.5em;
    color: contrast($color);
    font-family: "Open Sans";
    font-size: $size;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    font-optical-sizing: auto;
    text-decoration: none;
    text-transform: none;
    text-shadow: none;
    letter-spacing: 0;
    line-height: 1.5;
    cursor: text;

    &:hover {
        background-color: color.scale($color, $lightness: 5%);
    }

    &:focus-visible{
        outline: 0.1em solid map.get($palette, "secondary-medium");
    }
}

input{
    @include input();
}

textarea {
    @include input();
}

.input {

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    
    input,
    textarea {
        width: 100%;
    }
}

fieldset{

    display: flex;
    flex-direction: column;
    align-items: stretch;
    padding: 0.5em;
    gap: 0.25em;
    border: 0 solid;
    border-radius: 6px;
    background-color: map.get($palette, "default-light");
    color: map.get($palette, "on-default");
    font-family: "Open Sans";
    font-size: 1em;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    font-optical-sizing: auto;
    text-decoration: none;
    text-transform: none;
    text-shadow: none;
    letter-spacing: 0;

    div {

        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 0.25em;
        border: 0 solid;
        border-radius: 6px;

        &:hover {
            background-color: map.get($palette, "default-medium");
        }

        &:has(:checked){
            background-color: map.get($palette, "default-medium");
            color: map.get($palette, "primary-light");
        }

        input {
            width: 1.5em;  
            height: 1.5em;  
            accent-color: map.get($palette, "secondary-light");
        }

        :last-child {
            margin-left: auto;
        }
    }
}

.datePicker {

    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.5em;
    gap: 0.25em;

    .controls{

        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 0.25em;

        :first-child{
            font-weight: 700;
            margin-right: auto;
        }
    }

    .calendar{
        display: grid;
        grid-template-columns: repeat(7, auto);
        grid-template-rows: repeat(7, auto);
        gap: 2px;
    }

    [type=reset]{
        width: 100%;    
    }
}