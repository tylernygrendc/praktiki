@use "sass:color";

// BREAKPOINTS

@mixin compactViewport {
  @media (max-width: 768px) {
    @content;
  }
}

// FONTS

@font-face {
  font-family: "Roboto";
  src: url(/font/RobotoFlex.ttf);
}

@font-face {
  font-family: "Material Symbols";
  src: url(/font/MaterialSymbolsRounded.woff2);
}

@mixin font($size: 0.875rem, $height: 1.25rem, $wght: 400, $wdth: 100, $slnt: 0) {
  font-family: "Roboto", system-ui, sans-serif;
  font-size: $size;
  font-variation-settings: "wght" $wght; // bold = 800, normal = 400, light = 300
  font-variation-settings: "wdth" $wdth; // condensed = 75, expanded = 125
  font-optical-sizing: auto !important;
  line-height: $height;
}

@mixin icon($size: 1rem, $wght: 400) {
  display: inline-block !important;
  font-family: "Material Symbols" !important;
  font-size: $size;
  font-variation-settings: "wght" $wght; // bold = 700, normal = 400, light = 300, thin = 100
  font-style: normal !important;
  font-stretch: normal !important;
  font-optical-sizing: auto !important;
  text-decoration: none !important;
  text-transform: none !important;
  text-shadow: none;
  letter-spacing: 0;
  line-height: 1;
}

.display {
  @include font(2.8125rem, 3.25rem);
  &--large{
    @include font(3.5625rem, 4rem);
  }
  &--medium{
    @extend .display;
  }
  &--small{
    @include font(2.25rem, 2.75rem);
  }
}

.headline {
  @include font(1.75rem, 2.25rem);
  &--large{
    @include font(2rem, 2.5rem);
  }
  &--medium{
    @extend .headline;
  }
  &--small{
    @include font(1.5rem, 2rem);
  }
}

.title {
  @include font(1rem, 1.5rem, 500);
  &--large{
    @include font(1.375rem, 1.75rem, 500);
  }
  &--medium{
    @extend .headline;
  }
  &--small{
    @include font(0.875rem, 1.25rem, 500);
  }
}

.body {
  @include font(0.875rem, 1.25rem);
  &--large{
    @include font(1rem, 1.5rem);
  }
  &--medium{
    @extend .body;
  }
  &--small{
    @include font(0.75rem, 1rem);
  }
}

.label {
  @include font(0.75rem, 1rem, 500);
  &--large{
    @include font(0.875rem, 1.25rem, 500);
  }
  &--medium{
    @extend .label;
  }
  &--small{
    @include font(0.6875rem, 1rem, 500);
  }
}

// THEME

@function onColor($key) {
  @if color.lightness($key) < 50 {
    @return #f2f2f2;
  }
  @if color.lightness($key) > 80 {
    @return #666666;
  } 
  @else {
    @return #121212;
  }
}

@mixin colorScheme($dark: false) {
  // key
  $background: #f2f2f2;
  $surface: hsl(0, 0%, 100%);
  $surfaceContainer--high: hsl(0, 0%, 85%);
  $surfaceContainer--mid: hsl(0, 0%, 90%);
  $surfaceContainer--low: hsl(0, 0%, 95%);
  $primary: hsl(175, 60%, 20%);
  $error: hsl(0, 80%, 30%);
  $success: hsl(135, 70%, 20%);

  @if ($dark) {
    $background: #121212;
    $surface: hsl(0, 0%, 14%);
    $surfaceContainer--high: hsl(0, 0%, 30%);
    $surfaceContainer--mid: hsl(0, 0%, 25%);
    $surfaceContainer--low: hsl(0, 0%, 20%);
    $primary: hsl(175, 50%, 60%);
    $error: hsl(0, 50%, 70%);
    $success: hsl(135, 40%, 60%);
  }

  $onSurface: onColor($surface);
  $onSurface--hover: color.scale($onSurface, $lightness: -100%);
  @if ($dark) {
    $onSurface--hover: color.scale($onSurface, $lightness: 100%);
  }
  $onPrimary: onColor($primary);
  $onError: onColor($error);
  $onSuccess: onColor($error);

  // CSS Variables
  --background: #{$background};
  --surface: #{$surface};
  --on-surface: #{$onSurface};
  --on-surface--hover: #{$onSurface--hover};
  --surface-container--high: #{$surfaceContainer--high};
  --surface-container--mid: #{$surfaceContainer--mid};
  --surface-container--low: #{$surfaceContainer--low};
  --primary: #{$primary};
  --on-primary: #{$onPrimary};
  --error: #{$error};
  --on-error: #{$onError};
  --success: #{$success};
  --on-success: #{$onSuccess};
}

:root {
  @include colorScheme;
}

@media (prefers-color-scheme: dark) {
  :root {
    @include colorScheme($dark: true);
  }
}

.color-scheme {
  &--light {
    @include colorScheme;
  }
  &--dark {
    @include colorScheme($dark: true);
  }
}

// DEFAULT

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  width: 100svw;
  height: 100svh;
  overflow: hidden;
  scroll-behavior: smooth;
  background-color: var(--background);
  color: var(--on-background);
  font-family: sans-serif;
}

img,
svg,
video {
  display: block;
  object-fit: cover;
  object-position: center;
  max-width: 100%;
}

details {
  position: relative;
  summary {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding-right: 1.25rem;

    &::after {
      @include icon(1rem);
      content: "keyboard_arrow_down";
      position: absolute;
      inset: 50% 0 auto auto;
      translate: 0 -50%;
      padding: 0 0.25em;
    }
  }
  &[open] summary::after {
    transform: rotate(180deg);
  }
}

.flex-grow{
  flex-grow: 1;
  &--margin{
    @extend .flex-grow;
    margin: auto 10%;
  }
}

// SHOW/HIDE

$speed: 250ms;

.hide,
.hidden,
.invisible {
  transition: $speed;
  opacity: 0%;
  visibility: hidden !important;
}

.show,
.shown,
.visible {
  transition: $speed;
  opacity: 100%;
  visibility: visible !important;
}

.vanish,
.vanished {
  transition: $speed;
  opacity: 0%;
  display: none !important;
}

.appear,
.appeared {
  transition: $speed;
  opacity: 100%;
}

// hide block, keep visible to screen readers

@mixin accessibleHideFromView {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

.accessibleHideFromView {
  @include accessibleHideFromView;
}

// ELEVATION

// an elevated button's resting state is level 2
// an elevated button's hover state is level 4

@mixin elevation($focused: false) {
  $level: 2;
  @if ($focused) {
    $level: 4;
  }
  box-shadow: 0 #{$level * 1px} #{$level * 3px} hsl(0 0% 0% / 0.12),
    0 #{$level * 1px} #{$level * 1px} hsl(0 0% 0% / 0.24);
}

// SCROLLBAR

::-webkit-scrollbar {
  width: 0.5rem;
  height: 0.5rem;
  &-thumb {
    border-radius: 100vw;
    background-color: var(--primary);
  }
  &-track {
    margin-block: 0.25rem;
    border-radius: 100vw;
    background-color: (--background);
  }
  &-button,
  &-corner,
  &-resize {
    display: none;
  }
}

// BUTTONS

.btn {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  padding: 0.625rem 1.5rem;
  gap: 0.5rem;
  border: none;
  border-radius: 20px;
  overflow: hidden;
  font-size: 1rem;
  cursor: pointer;

  &:has(&__label):has(&__icon){
    padding: 0.625rem 1.5rem 0.625rem 1rem;
  }

  &:not(:has(&__label)) {
    padding: 0.625em;
    border-radius: 50%;
  }

  &__state {
    position: absolute;
    inset: 0;
    transition: 250ms;
    opacity: 0%;
  }

  &__icon {
    @include icon(1.25em);
  }

  &__label {
    @extend .label;
  }

  &:disabled {
    opacity: 38%;
    cursor: not-allowed;
  }

  &:hover .btn__state {
      transition: 250ms;
      opacity: 8%;
  }

  &:focus-visible &_state{
    transition: 250ms;
    opacity: 10%;
  }

  &--filled {
    background-color: var(--primary);
    color: var(--on-primary);
    .btn__state {
      background-color: var(--on-primary);
    }
  }

  &--text {
    background-color: var(--surface);
    color: var(--on-surface);
    .btn__state {
      background-color: var(--on-surface--hover);
    }
  }
}

.btn-list{
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  list-style: none;
  li, .btn {
    flex: 1;
    width: 100%;
  }
  .btn{
    @extend .btn--text;  
  }
  > :first-child{
    flex-grow: 2;
    .btn{
      @extend .btn--filled;
    }
  }
  &--reverse{
    @extend .btn-list;
    flex-direction: row-reverse;
  }
}

// CHIPS

.chip {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0.375em 1em;
  gap: 1ch;
  border: 0.125em solid var(--on-surface);
  border-radius: 20px;
  background-color: var(--surface);
  color: var(--on-surface);
  font-size: 0.9rem;
  cursor: pointer;

  &__state {
    position: absolute;
    inset: 0;
    transition: 250ms;
    opacity: 0%;
    background-color: var(--on-surface);
  }

  &__icon {
    @include icon(1em);
  }

  &__label {
    @extend .label;
  }

  &:has(&__icon) {
    padding: 0.375em 0.5em 0.375em 1em;
  }

  &:disabled {
    opacity: 38%;
    cursor: not-allowed;
  }

  &:hover &__state {
      transition: 250ms;
      opacity: 8%;
  }

  &:focus-visible &__state {
      transition: 250ms;
      opacity: 10%;
  }
}

dialog {
  position: fixed;
  inset: 50% auto auto 50%;
  translate: -50% -50%;
  width: 35rem;
  min-width: 17.5rem;
  max-width: 95vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1.5rem;
  gap: 1rem;
  border: 0 solid;
  border-radius: 1.75rem;
  background-color: var(--surface-container--high);

  .dialog__title{
    width: 100%;
    margin-bottom: 1.5rem;
    @include titleFont;
    color: var(--on-surface);
  }
  .dialog__text{
    @extend .body;
    color: var(--on-surface);
  }
  .dialog__actions{
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  &::backdrop{
    background-color: hsl(0 0% 0% / 25%);
  }
}

.layout{
  display: none;
  position: fixed;
  inset: 0 0 0 var(--navigation-width);
  background-color: var(--background);

  &--active{
    display: block;
  }

  // for list-detail layout
  &__list-pane{
    position: absolute;
    inset: 0.5rem 50% 0.5rem 1rem;
    overflow: hidden;
    padding: 0.5rem;
    border-radius: 1rem;
    background-color: var(--surface);
    color: var(--on-surface);
  }
  &__detail-pane{
    position: absolute;
    inset: 0.5rem 0.5rem 0.5rem calc(50% + 1rem);
    overflow: hidden;
    padding: 0.5rem;
    border-radius: 1rem;
    background-color: var(--surface);
    color: var(--on-surface);
  }

  // for supporting pane layout
  &__focus-pane{
    position: absolute;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: var(--surface);
    color: var(--on-surface);
    .hero{
      position: absolute;
      height: calc(60svh - 1rem);
      inset: auto 0 calc(100% + 0.5rem) 0;
      border-radius: 0.5rem;
      background-color: var(--surface);
      color: var(--on-surface);
    }
  }
  &__focus-pane:not(:has(.hero)){
    inset: 0.5rem 30% 0.5rem 1rem;
    overflow: hidden;
  }
  &__focus-pane:has(.hero){
    inset: 60svh 30% 0.5rem 1rem;
    overflow: visible;
  }
  &__support-pane{
    position: absolute;
    inset: 0.5rem 0.5rem 0.5rem calc(70% + 1rem);
    overflow: hidden;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: var(--surface);
    color: var(--on-surface);
  }

  //for feed layout
  &__feed{
    position: absolute;
    inset: 0.5rem 1rem 0.5rem 1rem;
    overflow: hidden;
    display: grid;

    .feed__item{
      display: flex;
      flex-direction: column;
      align-items: stretch;
      &--compact{
      }
    }
  }
}

.list {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;

  &_item {

    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 0.5rem;

    &__icon{
      @include icon;
    }
    &__image{
      height: 100%;
      aspect-ratio: 1/1;
      object-fit: contain;
      object-position: center;
      border-radius: 1.5rem;
    }
    &__text {
      display: flex;
      flex: 1;
      flex-direction: column;
      align-items: start;
      @extend .body;
      :first-child{
        @extend .title;
      }
    }
    &__support {
      @extend .body;
    }
    &__icon{
      @include icon;
    }
  }

  &__option {
    position: relative;
    height: 2.5rem;
    width: 100%;

    &:has(:disabled) {
      opacity: 38%;
      cursor: not-allowed;
    }

    &__icon {
      @include icon;
      position: absolute;
      inset: 50% auto auto 1.25rem;
      translate: -50% -50%;
      width: 1.125rem;
      height: 1.125rem;
      accent-color: var(--primary);
      z-index: 1;
    }

    &__state {
      position: absolute;
      inset: 0 auto auto 0;
      width: 2.5rem;
      height: 2.5rem;
      border: solid 0px;
      border-radius: 100%;
      z-index: 0;
      background-color: var(--primary);
      transition: 250ms;
      opacity: 0%;
      &:hover {
        transition: 250ms;
        opacity: 8%;
      }
      &:focus-visible {
        transition: 250ms;
        opacity: 10%;
      }
    }

    &__label {
      position: absolute;
      inset: 50% 0 auto 3em;
      translate: 0 -50%;
      @extend .label;
    }
  }
}

.controls {
  &__list{
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 0.5rem;
    gap: 0.5rem;
    list-style: none;
    &--hidden{
        display: none;
    }
    .list__label{
        margin: 0 auto 0 0.5rem;
        white-space: nowrap;
        @include titleFont(1em);
    }
    .btn{
      font-size: 0.25rem;
    }
  }
}

:root{
  --navigation-width: 5rem;
}

.navigation{
  position: fixed;
  inset: 0.5rem auto 0.5rem 0;
  width: 5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem 0;
  gap: 0.75rem;
  border-radius: 0 0.5rem 0.5rem 0;
  background-color: var(--surface);
  color: var(--on-surface);

  &-item{
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.25rem;
    gap: 0.25rem;
    border: 0 solid;
    border-radius: 0;
    box-shadow: none;
    background-color: inherit;
    color: inherit;
    cursor: pointer;

    &__icon{
      width: 3.5rem;
      height: 2rem;
      padding-top: 0.25rem;
      border-radius: 1.25rem;
      text-align: center;
      @include icon;
    }
    &__label{
      @extend .label;
    }

    &:hover{
      .navigation-item__icon{
        transition: 250ms;
        background-color: var(--surface-container--mid);
        color: var(--on-surface--hover);
      }
      .navigation-item__text{
        color: var(--on-surface--hover);
      }
    }
    
    &--active {
      .navigation-item__icon{
        background-color: var(--primary) !important;
        color: var(--on-primary) !important;
        font-variation-settings: "FILL" 1;
      }
      .navigation-item__text{
        font-variation-settings: "wght" 700;  
        color: var(--on-surface--hover);
      }
    }
  }  

  &--horizontal{
    inset: auto 0 0 0;
    width: 100dvw;
    height: 5rem;
    flex-direction: row;
    padding: 0 1rem;
    &-item {
      flex: 1;
    }
  }
}

.tabs{
  background-color: inherit;
}

.tablist{
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  list-style: none;
  margin-bottom: 1rem;

  li{
    display: flex;
    flex: 1;
  }

  .tab{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-items: center;
    padding-top: 0.25rem;
    gap: 0.5rem;
    border-width: 0;
    box-shadow: none;
    background-color: inherit;
    color: inherit;
    cursor: pointer;

    &__icon{
      @include icon;
    }
    &__label{
      @extend .label;
    }
    &__indicator{
      width: 90%;
      height: 0.1875rem;
      margin-top: 0.125rem;
      border-radius: 0.1875rem 0.1875rem 0 0;
      background-color: transparent;
    }

    &:hover{
      .tab__icon{
        color: var(--on-surface--hover);
      }
      .tab__text{
        color: var(--on-surface--hover);
      }
    }

    &--active{
      .tab__icon{
        color: var(--primary) !important;
        font-variation-settings: "FILL" 1;
      }
      .tab__text{
        color: var(--primary) !important;
      }
      .tab__indicator{  
        background-color: var(--primary) !important;
      }
    }
  }
}

.tabpanel{
  width: 100%;
  background-color: inherit;
  &--inactive{
    display: none !important;
  }
}

form{
  background-color: inherit;
}

.text-field{
  position: relative;
  z-index: 0;
  margin: 1rem 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  gap: 1rem;
  border: 0.125rem solid var(--on-surface);
  border-radius: 0.25rem;
  background-color: inherit;
  @extend .body;
  color: var(--on-surface);
  cursor: text;
  &:has(&__hint){
    margin-bottom: 2rem;
  }
  &--error {
    border-color: var(--error);
    color: var(--error);
  }
  &--success {
    border-color: var(--success);
    color: var(--success);
  }
  &__label{
    position: absolute;
    z-index: 1;
    inset: 0 auto auto 0.5rem;
    translate: 0% -50%;
    padding: 0.25rem;
    font-size: 0.8rem;
    background-color: inherit;
    color: var(--on-surface);
  }
  &__input{
    border-width: 0;
    border-radius: 0;
    background-color: transparent;
    caret-color: var(--primary);
    color: var(--on-surface);
    font-size: 1rem;
    resize: none;
    &:focus{
      outline: 0;
    }
  }
  input{
    display: block;
    width: 100%;
    height: 100%;
  }
  textarea{
    display: block;
    width: 100%;
    height: 100%;
    line-height: 1.5;
  }
  &__hint{
    position: absolute;
    inset: calc(100% + 0.5rem) 0 auto 0;
    height: 1rem;
    overflow: hidden;
    color: var(--on-surface);
    font-size: 0.75rem;
  }
  &:hover{
    outline: 0.175rem solid var(--on-surface);
    outline-offset: -0.175rem;
    .text-field__label{
      color: var(--on-surface--hover);
    }
  }
  &:focus-within{
    outline: 0.175rem solid var(--primary);
    outline-offset: -0.175rem;
    .text-field__label{
      color: var(--primary);
    }
  }
}
